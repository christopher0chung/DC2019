struct basicNode {
  int  key;
  byte ledx;
  byte ledy;
};

struct patchNode {
  int index;
  byte ledx;
  byte ledy;
  bool state;
  bool lastState; 
};

//   COUNTER 1 ----------------------------------------------------------------------------------------------------
patchNode counter1Ins[] {
  {138,  0, 0}, {147,  1, 0}, {159,  4, 0}, {146,  5, 0}, {135,  6, 0}, {145,  7, 0}
};

patchNode counter1Outs[] {
  {127,  0, 1}, {123,  1, 1}, {137,  2, 1}, {143,  3, 1}, {131,  4, 1}, {151,  5, 1}, {139,  6, 1}, {153,  7, 1},
  {125,  0, 2}, {126,  1, 2}, {122,  2, 2}, {121,  3, 2}, {155,  4, 2}, {130,  5, 2}, {129,  6, 2}, {154,  7, 2}
};

//   COUNTER 2 ----------------------------------------------------------------------------------------------------
patchNode counter2Ins[] {
  {134,  0, 3}, {120,  1, 3}, {133,  4, 3}, {136,  5, 3}, {140,  6, 3}, {152,  7, 3}
};

patchNode counter2Outs[] {
  {156,  0, 4}, {149,  1, 4}, {150,  2, 4}, {128,  3, 4}, {132,  4, 4}, {158,  5, 4}, {142,  6, 4}, {141,  7, 4},
  {157,  0, 5}, {124,  1, 5}, {144,  2, 5}, {148,  3, 5}, { 88,  4, 5}, { 96,  5, 5}, {101,  6, 5}, {102,  7, 5}
}; 

//   COUNTER 3 ----------------------------------------------------------------------------------------------------
patchNode counter3Ins[] {
  {110,  0, 6}, {116,  1, 6}, {108,  4, 6}, { 80,  5, 6}, { 92,  6, 6}, {109,  7, 6}
};

patchNode counter3Outs[] {
  { 93,  0, 5}, {112,  1, 7}, {100,  2, 7}, {104,  3, 7}, { 84,  4, 7}, {117,  5, 7}, (118,  6, 7}, { 94,  7, 7}
};

//   MUX 1 --------------------------------------------------------------------------------------------------------
patchNode mux1Ins[] {
  {210,  8, 0},  {203,  9, 0}, {211, 10, 0}, {218, 11, 0}, {235, 12, 0}, {225, 13, 0}, {224, 14, 0}
};

patchNode mux1Outs[] {
  {219, 15, 0}, {214, 16, 0}, {238, 17, 0}, {194, 18, 0} 
};

//   MUX 2 --------------------------------------------------------------------------------------------------------
patchNode mux2Ins[] {
  {215,  8, 1}, {201,  9, 1}, {226, 10, 1}, {234, 11, 1}, {237, 12, 1}, {222, 13, 1}, {200, 14, 1}
};

patchNode mux2Outs[] {
  {223, 15, 1}, {202, 16, 1}, {217, 17, 1}, {161, 18, 1}
};

//   MUX 3 --------------------------------------------------------------------------------------------------------
patchNode mux3Ins[] {
  {233,  8, 2}, {209,  9, 2}, {239, 10, 2}, {213, 11, 2}, {236, 12, 2},
  {221, 13, 2}, {216, 14, 2}, {232, 15, 2}, {208, 16, 2}, {229, 17, 2}
};

patchNode mux3Outs[] {
  {171, 18, 2}  
};


//   MUX 4 --------------------------------------------------------------------------------------------------------
patchNode mux4Ins[] {
  {231,  8, 3}, {227,  9, 3}, {207, 10, 3}, {228, 11, 3}, {205, 12, 3}, 
  {220, 13, 3}, {230, 14, 3}, {204, 15, 3}, {212, 16, 3}, {206, 17, 3} 
};

patchNode mux4Outs[] {
  {179, 18, 3}
};

//   BURST AND DELAY 1 --------------------------------------------------------------------------------------------
patchNode burst1Ins[] {
  {164,  8, 4}, {174,  9, 4}
};

patchNode burst1Outs[] {
  {172, 12, 4}, {181, 13, 4}, {168, 14, 4}
};

//   BURST AND DELAY 2 --------------------------------------------------------------------------------------------
patchNode burst2Ins[] {
  {175,  8, 5}, {190,  9, 5}
};

patchNode burst2Outs[] {
  {173, 12, 5}, {162, 13, 5}, {176, 14, 5}
};

//   BURST AND DELAY 3 --------------------------------------------------------------------------------------------
patchNode burst3Ins[] {
  {166,  8, 6}, {167,  9, 6}
};

patchNode burst3Outs[] {
  {189, 12, 6}, {188, 13, 6}, {196, 14, 6}
};

//   BURST AND DELAY 4 --------------------------------------------------------------------------------------------
patchNode burst4Ins[] {
  {163,  8, 7}, {165,  9, 7}  
};

patchNode burst4Outs[] {
  {184, 12, 7}, {197, 13, 7}, {192, 14, 7}
};

//   LOGIC 1 ------------------------------------------------------------------------------------------------------

//   LOGIC 2 ------------------------------------------------------------------------------------------------------

//   LOGIC 3 ------------------------------------------------------------------------------------------------------

//   LOGIC 4 ------------------------------------------------------------------------------------------------------

//   SPLITTER 1 ---------------------------------------------------------------------------------------------------

//   SPLITTER 2 ---------------------------------------------------------------------------------------------------

//   SPLITTER 3 ---------------------------------------------------------------------------------------------------

//   SPLITTER 4 ---------------------------------------------------------------------------------------------------

//   SPLITTER 5 ---------------------------------------------------------------------------------------------------

//   METROPLEXER --------------------------------------------------------------------------------------------------
 

int isPatchedNodes[6];
bool isPatched[6];

int patchExceptions[] = {
  
};

struct noteNode {
  byte index;
  byte ledx;
  byte ledy;
  bool state;
  bool lastState;
  byte note;
  unsigned long noteStartTime;
  bool lengthMode;
};

noteNode piano[25] = {
  {85, 32, 3},  {95, 32, 2},  {86, 33, 3},  {82, 33, 2},  {91, 34, 3},
  {87, 35, 3},  {90, 35, 2},  {81, 36, 3},  {83, 36, 2},  {105, 37, 3},
  {55, 37, 2},  {50, 38, 3},  {47, 39, 3},  {57, 39, 2},  {74, 32, 7},
  {65, 32, 6},  {41, 33, 7},  {51, 34, 7},  {63, 34, 6},  {59, 35, 7},
  {68, 35, 6},  {72, 36, 7},  {70, 36, 6},  {77, 37, 7},  {78, 38, 7}
};

noteNode tuners[14] = {
  {69, 38, 6},  {56, 40, 1},  {76, 41, 1},  {40, 42, 1},  {53, 43, 1},  {45, 44, 1},  {54, 45, 1},  
  {52, 46, 1},  {44, 47, 1},  { 3, 40, 3},  { 7, 41, 3},  {15, 42, 3},  { 2, 43, 3},  {23, 44, 3} 
};

byte velAdjust[4] = {127, 127, 127, 127};
unsigned int lengthAdjust[4] = {0, 0, 0, 0};
int pitchAdjust[4] = {0, 0, 0, 0};
